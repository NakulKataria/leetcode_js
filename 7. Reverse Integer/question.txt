Given a signed 32-bit integer x, return x with its digits reversed. If reversing x causes the value to go outside the signed 32-bit integer range [-231, 231 - 1], then return 0.

Assume the environment does not allow you to store 64-bit integers (signed or unsigned).


sol
found on leetcode with min runtime in js
/**
 * @param {number} x
 * @return {number}
 */

 var rec = function(n, rev) {
        if (n === 0) {
            return rev;
        }
        rev = rev * 10 + n % 10;
        return rec(Math.floor(n / 10), rev);
    }

var reverse = function(x) {
            let res = rec(Math.abs(x), 0) * (x < 0 ? -1 : 1);
        if (res < -(2 ** 31) || res > (2 ** 31) - 1) {
            return 0;
        }
        return res;
};
using recursion